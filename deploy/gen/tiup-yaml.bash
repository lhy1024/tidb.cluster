set -euo pipefail
. "`cd $(dirname ${BASH_SOURCE[0]}) && pwd`/../../helper/helper.bash"

session="${1}"
env_file="${session}/env"
env=`cat "${env_file}"`
shift

function mod_prop()
{
	local prefix="${1}"
	local matches=`env_prefix_kvs "${env}" "${prefix}" true`
	if [ -z "${matches}" ]; then
		return
	fi
	echo "${matches}" | while read line; do
		local val="${line#*=}"
		local val_is_number=`is_number "${val}"`
		if [ "${val_is_number}" != 'true' ]; then
			local val="\"${val}\""
		fi
		local key="${line%%=*}"
		echo -e "    ${key}: ${val}"
	done
}

function write_global()
{
	local lines=`mod_prop "tidb.mod.global."`
	if [ ! -z "${lines}" ]; then
		text="${text}\nglobal:\n${lines}"
	fi
}

function write_servers()
{
	local name="${1}"
	local hosts=`env_val "${env}" "tidb.host.${name}"`

	if [ -z "${hosts}" ]; then
		local ports=`env_prefix_keys "${env}" "tidb.port.${name}"`
		if [ ! -z "${ports}" ]; then
			echo "${ports}" | while read line; do
				# remove unused values
				echo -e "${line}=--" >> "${env_file}"
			done
		fi
		return
	fi

	local hosts=$(echo "${hosts}" | tr "," "\n")
	if [ "${name}" != 'monitored' ]; then
		local servers_title="${name}_servers:"
	else
		local servers_title="${name}:"
	fi

	text="${text}\n${servers_title}"

	local prefix="tidb.port.${name}"
	local prefix_len=${#prefix}
	local ports=`env_prefix_kvs "${env}" "${prefix}"`
	for host in ${hosts[@]}; do
		text="${text}\n  - host: ${host}"
		if [ -z "${ports}" ]; then
			continue
		fi
		local port_lines=`
			echo "${ports}" | while read line; do
				local line=${line:$prefix_len}
				local port="${line#*=}"
				local port_name="${line%%=*}"
				if [ -z "${port_name}" ]; then
					port_name="port"
				else
					port_name="${port_name}_port"
				fi
				port_name="${port_name#.*}"
				echo -e "    ${port_name}: ${port}"
			done
		`
		text="${text}\n${port_lines}"
	done

	local mod_lines=`mod_prop "tidb.mod.${name}."`
	if [ ! -z "${mod_lines}" ]; then
		text="${text}\n${mod_lines}"
	fi

	local conf_lines=`mod_prop "tidb.conf.${name}." | awk '{print "    "$0}'`
	if [ ! -z "${conf_lines}" ]; then
		text="${text}\n      config:\n${conf_lines}"
	fi
}

text="# auto generated by 'ticat deploy.gen.tiup-yaml'"
write_global
write_servers 'tikv'
write_servers 'pd'
write_servers 'tidb'
write_servers 'tiflash'
write_servers 'monitoring'
write_servers 'grafana'
write_servers 'monitored'

md5=`echo "${text}" | md5sum | awk '{print $1}'`
yaml_path="${session}/${md5:0:7}.yaml"

echo -e "${text}" | tee "${yaml_path}"
echo
echo -e "tidb.tiup.yaml=${yaml_path}" | tee -a "${env_file}"
